
name: Build OpenWrt Firmware with USB Redirector for CMCC RAX3000M

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  OPENWRT_VERSION: v23.05.3
  DEVICE_PROFILE: cmcc_rax3000m
  TARGET: mediatek
  SUBTARGET: filogic

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout USB Redirector Server
      uses: actions/checkout@v4
      with:
        path: usb-redirector-server

    - name: Maximize build space
      run: |
        echo "Before cleanup:"
        df -h
        
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        
        sudo apt-get remove -y '^firefox' '^thunderbird' '^libreoffice' '^google-chrome'
        sudo apt-get autoremove -y
        sudo apt-get clean
        
        echo "After cleanup:"
        df -h

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          ccache \
          ecj \
          fastjar \
          file \
          g++ \
          gawk \
          gettext \
          git \
          java-propose-classpath \
          libelf-dev \
          libncurses-dev \
          libssl-dev \
          python3 \
          python3-dev \
          python3-distutils \
          python3-setuptools \
          qemu-utils \
          rsync \
          subversion \
          swig \
          time \
          unzip \
          wget \
          xsltproc \
          zlib1g-dev

    - name: Clone OpenWrt
      run: |
        git clone --depth 1 --branch ${{ env.OPENWRT_VERSION }} https://github.com/openwrt/openwrt.git
        cd openwrt
        echo "OpenWrt version: $(git rev-parse HEAD)"

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Copy USB Redirector package to OpenWrt
      run: |
        # Following official documentation step 2
        echo "Copying USB Redirector Server package to OpenWrt package directory..."
        cp -r usb-redirector-server openwrt/package/
        
        # Fix Makefile tabs if needed
        sed -i 's/^[ ]\+\([$(]\)/\t\1/g' openwrt/package/usb-redirector-server/Makefile
        
        # Verify the package is in place
        echo "Package structure:"
        ls -la openwrt/package/usb-redirector-server/

    - name: Configure OpenWrt for CMCC RAX3000M with USB Redirector
      run: |
        cd openwrt
        
        # Create base configuration for CMCC RAX3000M
        cat > .config << EOF
        # Target
        CONFIG_TARGET_mediatek=y
        CONFIG_TARGET_mediatek_filogic=y
        CONFIG_TARGET_mediatek_filogic_DEVICE_cmcc_rax3000m=y
        
        # Build settings
        CONFIG_DEVEL=y
        CONFIG_CCACHE=y
        CONFIG_BUILD_LOG=y
        
        # Image settings
        CONFIG_TARGET_ROOTFS_INITRAMFS=y
        CONFIG_TARGET_ROOTFS_SQUASHFS=y
        
        # Basic system
        CONFIG_PACKAGE_base-files=y
        CONFIG_PACKAGE_busybox=y
        CONFIG_PACKAGE_dropbear=y
        CONFIG_PACKAGE_mtd=y
        CONFIG_PACKAGE_uci=y
        CONFIG_PACKAGE_opkg=y
        
        # Kernel modules for USB
        CONFIG_PACKAGE_kmod-usb-core=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb3=y
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb-uhci=y
        CONFIG_PACKAGE_kmod-usb-ehci=y
        CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
        CONFIG_PACKAGE_kmod-usb-xhci-mtk=y
        CONFIG_PACKAGE_kmod-usb-storage=y
        CONFIG_PACKAGE_kmod-usb-storage-extras=y
        
        # USB Redirector Server - Build as modules (m) to generate IPK files
        CONFIG_PACKAGE_usb-redirector-server=m
        CONFIG_PACKAGE_kmod-usb-redirector-server=m
        
        # Libraries that might be needed
        CONFIG_PACKAGE_librt=y
        CONFIG_PACKAGE_libpthread=y
        CONFIG_PACKAGE_libstdcpp=y
        
        # Network
        CONFIG_PACKAGE_netifd=y
        CONFIG_PACKAGE_odhcp6c=y
        CONFIG_PACKAGE_odhcpd-ipv6only=y
        CONFIG_PACKAGE_ppp=y
        CONFIG_PACKAGE_ppp-mod-pppoe=y
        
        # WiFi (MediaTek)
        CONFIG_PACKAGE_kmod-mt7915-firmware=y
        CONFIG_PACKAGE_wpad-basic-mbedtls=y
        CONFIG_PACKAGE_hostapd-common=y
        CONFIG_PACKAGE_wireless-tools=y
        
        # LuCI Web Interface
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-base=y
        CONFIG_PACKAGE_luci-mod-admin-full=y
        CONFIG_PACKAGE_luci-theme-bootstrap=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-proto-ppp=y
        CONFIG_PACKAGE_luci-proto-ipv6=y
        CONFIG_PACKAGE_uhttpd=y
        CONFIG_PACKAGE_uhttpd-mod-ubus=y
        
        # Utilities
        CONFIG_PACKAGE_usbutils=y
        CONFIG_PACKAGE_mount-utils=y
        CONFIG_PACKAGE_block-mount=y
        CONFIG_PACKAGE_e2fsprogs=y
        CONFIG_PACKAGE_kmod-fs-ext4=y
        CONFIG_PACKAGE_kmod-fs-vfat=y
        CONFIG_PACKAGE_kmod-nls-cp437=y
        CONFIG_PACKAGE_kmod-nls-iso8859-1=y
        CONFIG_PACKAGE_kmod-nls-utf8=y
        
        # Build options
        CONFIG_KERNEL_BUILD_USER="github-actions"
        CONFIG_KERNEL_BUILD_DOMAIN="github.com"
        
        # Package build options
        CONFIG_PACKAGE_INDEX=y
        EOF
        
        # Expand configuration
        make defconfig
        
        # Verify USB Redirector is selected as module
        echo "Checking if USB Redirector packages are selected:"
        grep -E "CONFIG_PACKAGE.*usb-redirector" .config | grep -v "^#"

    - name: Download package sources
      run: |
        cd openwrt
        make download -j8 || make download -j1 V=s
        
        # Verify downloads
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build OpenWrt firmware with USB Redirector
      run: |
        cd openwrt
        
        echo "Starting full OpenWrt build with USB Redirector Server..."
        
        # Use multiple cores but with error fallback to single core
        make -j$(nproc) world || make -j1 V=s world
        
        echo "Build completed"

    - name: Ensure IPK packages are built
      run: |
        cd openwrt
        
        # Check if IPK packages were created
        echo "=== Checking for IPK packages ==="
        
        KMOD_EXISTS=$(find bin/ -name "kmod-usb-redirector-server*.ipk" | wc -l)
        USER_EXISTS=$(find bin/ -name "usb-redirector-server*.ipk" ! -name "kmod-*" | wc -l)
        
        echo "Found $KMOD_EXISTS kernel module package(s)"
        echo "Found $USER_EXISTS userspace package(s)"
        
        # If packages don't exist, build them separately
        if [ "$KMOD_EXISTS" -eq 0 ] || [ "$USER_EXISTS" -eq 0 ]; then
          echo "Some packages missing, building separately..."
          
          # Clean and rebuild the packages
          make package/usb-redirector-server/clean V=s
          make package/usb-redirector-server/compile V=s
          
          # Force package creation
          make package/index V=s
        fi
        
        # Final check
        echo ""
        echo "=== Final package check ==="
        echo "Kernel module packages:"
        find bin/ -name "kmod-usb-redirector-server*.ipk" -ls
        
        echo ""
        echo "Userspace packages:"
        find bin/ -name "usb-redirector-server*.ipk" ! -name "kmod-*" -ls

    - name: Check all build results
      run: |
        cd openwrt
        
        echo "=== Firmware images ==="
        ls -lah bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*cmcc-rax3000m* 2>/dev/null || echo "No device-specific firmware found"
        ls -lah bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.bin 2>/dev/null || echo "No .bin files found"
        
        echo ""
        echo "=== USB Redirector IPK packages ==="
        echo "All USB Redirector packages:"
        find bin/ -name "*usb-redirector*.ipk" | while read pkg; do
          echo "  $(basename $pkg) - $(du -h $pkg | cut -f1)"
        done
        
        echo ""
        echo "=== Package locations ==="
        echo "Checking bin/packages/aarch64_cortex-a53/base/:"
        ls -la bin/packages/aarch64_cortex-a53/base/*usb-redirector*.ipk 2>/dev/null || echo "  Not found here"
        
        echo "Checking bin/targets/mediatek/filogic/packages/:"
        ls -la bin/targets/mediatek/filogic/packages/*usb-redirector*.ipk 2>/dev/null || echo "  Not found here"

    - name: Organize artifacts
      run: |
        # Create organized artifact structure
        mkdir -p artifacts/firmware
        mkdir -p artifacts/packages
        mkdir -p artifacts/ipk-only
        
        # Copy firmware images
        echo "Copying firmware images..."
        cp openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*cmcc-rax3000m* artifacts/firmware/ 2>/dev/null || true
        cp openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.bin artifacts/firmware/ 2>/dev/null || true
        cp openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.itb artifacts/firmware/ 2>/dev/null || true
        
        # Copy USB Redirector IPK packages to both locations
        echo "Copying USB Redirector IPK packages..."
        find openwrt/bin/ -name "*usb-redirector*.ipk" | while read pkg; do
          cp -v "$pkg" artifacts/packages/
          cp -v "$pkg" artifacts/ipk-only/
        done
        
        # Copy package index
        find openwrt/bin/packages/ -name Packages 2>/dev/null | head -1 | xargs -I{} cp {} artifacts/packages/Packages.txt 2>/dev/null || true
        
        # Create detailed info file
        cat > artifacts/README.md << EOF
        # OpenWrt Build for CMCC RAX3000M with USB Redirector Server
        
        Build Date: $(date)
        OpenWrt Version: ${{ env.OPENWRT_VERSION }}
        Target: ${{ env.TARGET }}/${{ env.SUBTARGET }}
        Device: CMCC RAX3000M
        
        ## Contents
        
        ### 1. Firmware Files (in firmware/)
        Complete OpenWrt firmware images for CMCC RAX3000M with integrated USB Redirector support.
        
        \`\`\`
        $(ls -lah artifacts/firmware/ 2>/dev/null | tail -n +2 || echo "No firmware files found")
        \`\`\`
        
        ### 2. IPK Packages (in ipk-only/)
        Standalone USB Redirector packages for installation on existing OpenWrt systems.
        
        \`\`\`
        $(ls -lah artifacts/ipk-only/ 2>/dev/null | tail -n +2 || echo "No IPK packages found")
        \`\`\`
        
        ## Installation Instructions
        
        ### Option A: Flash Complete Firmware
        1. Access your router's web interface (usually http://192.168.1.1)
        2. Navigate to System -> Backup/Flash Firmware
        3. Upload the appropriate firmware file from the firmware/ folder
        4. Wait for the router to reboot (5-10 minutes)
        
        ### Option B: Install IPK Packages Only
        For routers already running OpenWrt:
        
        1. Copy IPK files to router:
           \`\`\`bash
           scp ipk-only/kmod-usb-redirector-server*.ipk root@192.168.1.1:/tmp/
           scp ipk-only/usb-redirector-server*.ipk root@192.168.1.1:/tmp/
           \`\`\`
        
        2. SSH into router and install (order is important):
           \`\`\`bash
           ssh root@192.168.1.1
           cd /tmp
           opkg update
           opkg install kmod-usb-redirector-server*.ipk
           opkg install usb-redirector-server*.ipk
           \`\`\`
        
        3. Start and enable the service:
           \`\`\`bash
           /etc/init.d/usbsrvd start
           /etc/init.d/usbsrvd enable
           \`\`\`
        
        4. Verify installation:
           \`\`\`bash
           lsmod | grep tusbd
           ps | grep usbsrvd
           \`\`\`
        
        ## Configuration
        
        The USB Redirector Server configuration file is located at:
        \`/etc/usbsrvd.conf\`
        
        Default settings should work for most use cases. Edit this file to customize ports, authentication, etc.
        
        ## Troubleshooting
        
        1. Check service status:
           \`\`\`bash
           /etc/init.d/usbsrvd status
           \`\`\`
        
        2. View logs:
           \`\`\`bash
           logread | grep usbsrv
           \`\`\`
        
        3. List USB devices:
           \`\`\`bash
           lsusb
           \`\`\`
        
        ## Package Information
        
        - **kmod-usb-redirector-server**: Kernel module (tusbd.ko) for USB redirection
        - **usb-redirector-server**: Userspace daemon and utilities
        
        Both packages must be installed for the USB Redirector to function.
        EOF
        
        echo "=== Build Summary ==="
        echo "Firmware files: $(ls artifacts/firmware/ 2>/dev/null | wc -l)"
        echo "IPK packages: $(ls artifacts/ipk-only/*.ipk 2>/dev/null | wc -l)"
        
        # List the actual files
        echo ""
        echo "IPK Packages built:"
        ls -lah artifacts/ipk-only/*.ipk 2>/dev/null || echo "No IPK packages found"

    - name: Upload firmware images
      uses: actions/upload-artifact@v4
      with:
        name: firmware-cmcc-rax3000m
        path: artifacts/firmware/
        retention-days: 30
        if-no-files-found: warn

    - name: Upload IPK packages only
      uses: actions/upload-artifact@v4
      with:
        name: usb-redirector-ipk-packages
        path: artifacts/ipk-only/
        retention-days: 30
        if-no-files-found: error

    - name: Upload complete build
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-cmcc-rax3000m-complete
        path: artifacts/
        retention-days: 30

    - name: Create release (optional)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: Build #${{ github.run_number }} - CMCC RAX3000M
        draft: false
        prerelease: false
        files: |
          artifacts/firmware/*
          artifacts/ipk-only/*.ipk
          artifacts/README.md
        body: |
          ## OpenWrt for CMCC RAX3000M with USB Redirector Server
          
          **OpenWrt Version:** ${{ env.OPENWRT_VERSION }}
          **Build Date:** ${{ github.event.head_commit.timestamp }}
          **Commit:** ${{ github.sha }}
          
          ### Downloads
          - **Firmware**: Complete OpenWrt images with USB Redirector integrated
          - **IPK Packages**: Standalone packages for existing OpenWrt installations
          
          ### Installation
          See README.md for detailed installation instructions.
          
          ### What's Included
          - OpenWrt ${{ env.OPENWRT_VERSION }} base system
          - USB Redirector Server kernel module
          - USB Redirector Server userspace utilities
          - Full USB support (USB 2.0/3.0)
          - LuCI web interface
          - WiFi 6 support

